{"version":3,"file":"collect.js","names":["escapeRegex","string","replace","extractClassesFromHtml","html","ignoredClasses","htmlClasses","regex","match","exec","ignoredClassesDeduped","Set","split","forEach","className","has","push","RegExp","join","collect","css","classnameModifiers","animations","other","postcss","root","critical","stylesheet","parse","blockedClasses","htmlClassesRegExp","blockedClassesSanitized","map","blockedClassesRegExp","isCritical","rule","selector","startsWith","isExcluded","length","test","Boolean","handleAtRule","name","criticalRule","clone","otherRule","removedNodesFromOther","each","childRule","index","nodes","remove","append","walkAtRules","parent","type","walkedAtRules","walkRules","add","walkDecls","decl","value","params","toString"],"sources":["../src/collect.ts"],"sourcesContent":["import type { AtRule, ChildNode } from 'postcss';\nimport postcss from 'postcss';\n\ntype CollectResult = {\n  critical: string;\n  other: string;\n};\n\ninterface ClassnameModifiers {\n  ignoredClasses?: string[];\n  blockedClasses?: string[];\n}\n\n/**\n * Used to escape `RegExp`\n * [syntax characters](https://262.ecma-international.org/7.0/#sec-regular-expressions-patterns).\n */\nfunction escapeRegex(string: string) {\n  return string.replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&');\n}\n\nconst extractClassesFromHtml = (\n  html: string,\n  ignoredClasses: string[]\n): RegExp => {\n  const htmlClasses: string[] = [];\n  const regex = /\\s+class=\"([^\"]+)\"/gm;\n  let match = regex.exec(html);\n  const ignoredClassesDeduped = new Set(ignoredClasses);\n\n  while (match !== null) {\n    match[1].split(' ').forEach((className) => {\n      // eslint-disable-next-line no-param-reassign\n      className = escapeRegex(className);\n      if (className !== '' && !ignoredClassesDeduped.has(className)) {\n        htmlClasses.push(className);\n      }\n    });\n    match = regex.exec(html);\n  }\n\n  return new RegExp(htmlClasses.join('|'), 'gm');\n};\n\n/**\n * This utility extracts critical CSS from given HTML and CSS file to be used in SSR environments\n * @param {string} html the HTML from which classes will be parsed\n * @param {string} css the CSS file from which selectors will be parsed and determined as critical or other\n * @param {string[]} ignoredClasses classes that, when present in the HTML, will not be included in the regular expression used to match selectors\n * @param {string[]} blockedClasses classes that, when contained in a selector, will cause the selector to be marked as not critical\n * @returns {CollectResult} object containing the critical and other CSS styles\n */\nexport default function collect(\n  html: string,\n  css: string,\n  classnameModifiers?: ClassnameModifiers\n): CollectResult {\n  const animations = new Set();\n  const other = postcss.root();\n  const critical = postcss.root();\n  const stylesheet = postcss.parse(css);\n  const ignoredClasses = classnameModifiers?.ignoredClasses ?? [];\n  const blockedClasses = classnameModifiers?.blockedClasses ?? [];\n\n  const htmlClassesRegExp = extractClassesFromHtml(html, ignoredClasses);\n  const blockedClassesSanitized = blockedClasses.map(escapeRegex);\n  const blockedClassesRegExp = new RegExp(\n    blockedClassesSanitized.join('|'),\n    'gm'\n  );\n\n  const isCritical = (rule: ChildNode) => {\n    // Only check class names selectors\n    if ('selector' in rule && rule.selector.startsWith('.')) {\n      const isExcluded =\n        blockedClasses.length > 0 && blockedClassesRegExp.test(rule.selector);\n      if (isExcluded) return false;\n\n      return Boolean(rule.selector.match(htmlClassesRegExp));\n    }\n\n    return true;\n  };\n\n  const handleAtRule = (rule: AtRule) => {\n    if (rule.name === 'keyframes') {\n      return;\n    }\n\n    const criticalRule = rule.clone();\n    const otherRule = rule.clone();\n\n    let removedNodesFromOther = 0;\n    criticalRule.each((childRule: ChildNode, index: number) => {\n      if (isCritical(childRule)) {\n        otherRule.nodes[index - removedNodesFromOther]?.remove();\n        removedNodesFromOther += 1;\n      } else {\n        childRule.remove();\n      }\n    });\n\n    rule.remove();\n\n    if (criticalRule.nodes.length > 0) {\n      critical.append(criticalRule);\n    }\n    if (otherRule.nodes.length > 0) {\n      other.append(otherRule);\n    }\n  };\n\n  stylesheet.walkAtRules('font-face', (rule) => {\n    /**\n     * @font-face rules may be defined also in CSS conditional groups (eg. @media)\n     * we want only handle those from top-level, rest will be handled in stylesheet.walkRules\n     */\n    if (rule.parent?.type === 'root') {\n      critical.append(rule);\n    }\n  });\n\n  const walkedAtRules = new Set();\n\n  stylesheet.walkRules((rule) => {\n    if (\n      rule.parent &&\n      'name' in rule.parent &&\n      (rule.parent as { name: string }).name === 'keyframes'\n    ) {\n      return;\n    }\n\n    if (rule.parent?.type === 'atrule') {\n      if (!walkedAtRules.has(rule.parent)) {\n        handleAtRule(rule.parent as AtRule);\n        walkedAtRules.add(rule.parent);\n      }\n      return;\n    }\n\n    if (isCritical(rule)) {\n      critical.append(rule);\n    } else {\n      other.append(rule);\n    }\n  });\n\n  critical.walkDecls(/animation/, (decl) => {\n    animations.add(decl.value.split(' ')[0]);\n  });\n\n  stylesheet.walkAtRules('keyframes', (rule) => {\n    if (animations.has(rule.params)) {\n      critical.append(rule);\n    }\n  });\n\n  return {\n    critical: critical.toString(),\n    other: other.toString(),\n  };\n}\n"],"mappings":"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"}