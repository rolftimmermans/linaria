{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/**\n * This file contains a Rollup loader for Linaria.\n * It uses the transform.ts function to generate class names from source code,\n * returns transformed code without template literals and attaches generated source maps\n */\n\nimport { createFilter } from '@rollup/pluginutils';\nimport type { Plugin } from 'rollup';\n\nimport {\n  transform,\n  slugify,\n  TransformCacheCollection,\n} from '@linaria/babel-preset';\nimport type {\n  PluginOptions,\n  Preprocessor,\n  Result,\n} from '@linaria/babel-preset';\nimport { createCustomDebug } from '@linaria/logger';\nimport { getFileIdx, syncResolve } from '@linaria/utils';\nimport type { Plugin as VitePlugin } from '@linaria/vite';\nimport vitePlugin from '@linaria/vite';\n\ntype RollupPluginOptions = {\n  include?: string | string[];\n  exclude?: string | string[];\n  sourceMap?: boolean;\n  preprocessor?: Preprocessor;\n} & Partial<PluginOptions>;\n\nexport default function linaria({\n  include,\n  exclude,\n  sourceMap,\n  preprocessor,\n  ...rest\n}: RollupPluginOptions = {}): Plugin {\n  const filter = createFilter(include, exclude);\n  const cssLookup: { [key: string]: string } = {};\n  const cache = new TransformCacheCollection();\n\n  const plugin: Plugin = {\n    name: 'linaria',\n    load(id: string) {\n      return cssLookup[id];\n    },\n    /* eslint-disable-next-line consistent-return */\n    resolveId(importee: string) {\n      if (importee in cssLookup) return importee;\n    },\n    async transform(\n      code: string,\n      id: string\n    ): Promise<{ code: string; map: Result['sourceMap'] } | undefined> {\n      // Do not transform ignored and generated files\n      if (!filter(id) || id in cssLookup) return;\n\n      const log = createCustomDebug('rollup', getFileIdx(id));\n\n      log('rollup-init', id);\n\n      const asyncResolve = async (\n        what: string,\n        importer: string,\n        stack: string[]\n      ) => {\n        const resolved = await this.resolve(what, importer);\n        if (resolved) {\n          if (resolved.external) {\n            // If module is marked as external, Rollup will not resolve it,\n            // so we need to resolve it ourselves with default resolver\n            const resolvedId = syncResolve(what, importer, stack);\n            log('resolve', \"✅ '%s'@'%s -> %O\\n%s\", what, importer, resolved);\n            return resolvedId;\n          }\n\n          log('resolve', \"✅ '%s'@'%s -> %O\\n%s\", what, importer, resolved);\n\n          // Vite adds param like `?v=667939b3` to cached modules\n          const resolvedId = resolved.id.split('?')[0];\n\n          if (resolvedId.startsWith('\\0')) {\n            // \\0 is a special character in Rollup that tells Rollup to not include this in the bundle\n            // https://rollupjs.org/guide/en/#outputexports\n            return null;\n          }\n\n          return resolvedId;\n        }\n\n        log('resolve', \"❌ '%s'@'%s\", what, importer);\n        throw new Error(`Could not resolve ${what}`);\n      };\n\n      const result = await transform(\n        code,\n        {\n          filename: id,\n          preprocessor,\n          pluginOptions: rest,\n        },\n        asyncResolve,\n        {},\n        cache\n      );\n\n      if (!result.cssText) return;\n\n      let { cssText } = result;\n\n      const slug = slugify(cssText);\n      const filename = `${id.replace(/\\.[jt]sx?$/, '')}_${slug}.css`;\n\n      if (sourceMap && result.cssSourceMapText) {\n        const map = Buffer.from(result.cssSourceMapText).toString('base64');\n        cssText += `/*# sourceMappingURL=data:application/json;base64,${map}*/`;\n      }\n\n      cssLookup[filename] = cssText;\n\n      result.code += `\\nimport ${JSON.stringify(filename)};\\n`;\n\n      /* eslint-disable-next-line consistent-return */\n      return { code: result.code, map: result.sourceMap };\n    },\n  };\n\n  let vite: VitePlugin | undefined;\n\n  return new Proxy<Plugin>(plugin, {\n    get(target, prop) {\n      return ((vite as Plugin) || target)[prop as keyof Plugin];\n    },\n\n    getOwnPropertyDescriptor(target, prop) {\n      return Object.getOwnPropertyDescriptor(\n        vite || target,\n        prop as keyof Plugin\n      );\n    },\n\n    ownKeys() {\n      // Rollup doesn't ask config about its own keys, so it is Vite.\n      vite = vitePlugin({\n        include,\n        exclude,\n        sourceMap,\n        preprocessor,\n        ...rest,\n      });\n\n      vite = {\n        ...vite,\n        buildStart() {\n          this.warn(\n            'You are trying to use @linaria/rollup with Vite. The support for Vite in @linaria/rollup is deprecated and will be removed in the next major release. Please use @linaria/vite instead.'\n          );\n        },\n      };\n\n      return Reflect.ownKeys(vite);\n    },\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,yBAA6B;AAG7B,0BAIO;AAMP,oBAAkC;AAClC,mBAAwC;AAExC,kBAAuB;AASR,SAAR,QAAyB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,KACG;AACL,IAAyB,CAAC,GAAW;AACnC,QAAM,aAAS,iCAAa,SAAS,OAAO;AAC5C,QAAM,YAAuC,CAAC;AAC9C,QAAM,QAAQ,IAAI,6CAAyB;AAE3C,QAAM,SAAiB;AAAA,IACrB,MAAM;AAAA,IACN,KAAK,IAAY;AACf,aAAO,UAAU;AAAA,IACnB;AAAA,IAEA,UAAU,UAAkB;AAC1B,UAAI,YAAY;AAAW,eAAO;AAAA,IACpC;AAAA,IACA,MAAM,UACJ,MACA,IACiE;AAEjE,UAAI,CAAC,OAAO,EAAE,KAAK,MAAM;AAAW;AAEpC,YAAM,UAAM,iCAAkB,cAAU,yBAAW,EAAE,CAAC;AAEtD,UAAI,eAAe,EAAE;AAErB,YAAM,eAAe,OACnB,MACA,UACA,UACG;AACH,cAAM,WAAW,MAAM,KAAK,QAAQ,MAAM,QAAQ;AAClD,YAAI,UAAU;AACZ,cAAI,SAAS,UAAU;AAGrB,kBAAMA,kBAAa,0BAAY,MAAM,UAAU,KAAK;AACpD,gBAAI,WAAW,6BAAwB,MAAM,UAAU,QAAQ;AAC/D,mBAAOA;AAAA,UACT;AAEA,cAAI,WAAW,6BAAwB,MAAM,UAAU,QAAQ;AAG/D,gBAAM,aAAa,SAAS,GAAG,MAAM,GAAG,EAAE;AAE1C,cAAI,WAAW,WAAW,IAAI,GAAG;AAG/B,mBAAO;AAAA,UACT;AAEA,iBAAO;AAAA,QACT;AAEA,YAAI,WAAW,mBAAc,MAAM,QAAQ;AAC3C,cAAM,IAAI,MAAM,qBAAqB,MAAM;AAAA,MAC7C;AAEA,YAAM,SAAS,UAAM;AAAA,QACnB;AAAA,QACA;AAAA,UACE,UAAU;AAAA,UACV;AAAA,UACA,eAAe;AAAA,QACjB;AAAA,QACA;AAAA,QACA,CAAC;AAAA,QACD;AAAA,MACF;AAEA,UAAI,CAAC,OAAO;AAAS;AAErB,UAAI,EAAE,QAAQ,IAAI;AAElB,YAAM,WAAO,6BAAQ,OAAO;AAC5B,YAAM,WAAW,GAAG,GAAG,QAAQ,cAAc,EAAE,KAAK;AAEpD,UAAI,aAAa,OAAO,kBAAkB;AACxC,cAAM,MAAM,OAAO,KAAK,OAAO,gBAAgB,EAAE,SAAS,QAAQ;AAClE,mBAAW,qDAAqD;AAAA,MAClE;AAEA,gBAAU,YAAY;AAEtB,aAAO,QAAQ;AAAA,SAAY,KAAK,UAAU,QAAQ;AAAA;AAGlD,aAAO,EAAE,MAAM,OAAO,MAAM,KAAK,OAAO,UAAU;AAAA,IACpD;AAAA,EACF;AAEA,MAAI;AAEJ,SAAO,IAAI,MAAc,QAAQ;AAAA,IAC/B,IAAI,QAAQ,MAAM;AAChB,cAAS,QAAmB,QAAQ;AAAA,IACtC;AAAA,IAEA,yBAAyB,QAAQ,MAAM;AACrC,aAAO,OAAO;AAAA,QACZ,QAAQ;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,IAEA,UAAU;AAER,iBAAO,YAAAC,SAAW;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,GAAG;AAAA,MACL,CAAC;AAED,aAAO;AAAA,QACL,GAAG;AAAA,QACH,aAAa;AACX,eAAK;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO,QAAQ,QAAQ,IAAI;AAAA,IAC7B;AAAA,EACF,CAAC;AACH;","names":["resolvedId","vitePlugin"]}