{"version":3,"file":"preprocessor.js","names":["preprocessor","errors","cache","offsets","code","input","filename","result","transform","asyncResolveFallback","undefined","e","rules","replacements","generatedLineNumber","cssText","Object","values","map","rule","ruleText","className","start","push","generated","line","column","original","name","displayName","split","length","join","reverse","error","sourceMap","warnings","warning","offset","find","o","prefix","message","stripAnsi","startsWith","replace","loc","l","includes","Number","trim","errored","text","severity","forEach","w","end"],"sources":["../src/preprocessor.ts"],"sourcesContent":["import stripAnsi from 'strip-ansi';\n\nimport { transform } from '@linaria/babel-preset';\nimport type { Replacement } from '@linaria/babel-preset';\nimport { asyncResolveFallback } from '@linaria/utils';\n\ntype Errors = {\n  [key: string]:\n    | {\n        name?: string;\n        code?: string;\n        message: string;\n        pos?: number;\n        loc?: {\n          line: number;\n          column: number;\n        };\n      }\n    | null\n    | undefined;\n};\n\ntype Cache = {\n  [key: string]: Replacement[] | null | undefined;\n};\n\ntype Warning = {\n  rule?: string;\n  text: string;\n  severity: 'error' | 'warning';\n  line: number;\n  column: number;\n};\n\ntype LintResult = {\n  errored: boolean;\n  warnings: Warning[];\n};\n\ninterface IPosition {\n  line: number;\n  column: number;\n}\n\ninterface ISourceOffset {\n  generated: IPosition;\n  name: string;\n  original: IPosition;\n}\n\nfunction preprocessor() {\n  const errors: Errors = {};\n  const cache: Cache = {};\n  const offsets: Record<string, ISourceOffset[] | undefined> = {};\n\n  return {\n    async code(input: string, filename: string) {\n      let result;\n\n      try {\n        result = await transform(\n          input,\n          {\n            filename,\n          },\n          asyncResolveFallback\n        );\n\n        cache[filename] = undefined;\n        errors[filename] = undefined;\n        offsets[filename] = [];\n      } catch (e: unknown) {\n        cache[filename] = undefined;\n        offsets[filename] = undefined;\n        errors[filename] = e as Error;\n\n        // Ignore parse errors here\n        // We handle it separately\n        return '';\n      }\n\n      const { rules, replacements } = result;\n\n      if (!rules) {\n        return '';\n      }\n\n      // Construct a CSS-ish file from the unprocessed style rules\n      let generatedLineNumber = 1;\n      const cssText = Object.values(rules)\n        .map((rule) => {\n          const ruleText = `.${rule.className} {${rule.cssText}}`;\n\n          if (rule.start && 'line' in rule.start) {\n            offsets[filename]?.push({\n              generated: {\n                line: generatedLineNumber,\n                column: 1,\n              },\n              original: {\n                ...rule.start,\n              },\n              name: rule.displayName,\n            });\n\n            generatedLineNumber += 1;\n          }\n\n          generatedLineNumber += ruleText.split('\\n').length + 2;\n          return ruleText;\n        })\n        .join('\\n\\n');\n\n      cache[filename] = replacements;\n      offsets[filename] = offsets[filename]?.reverse();\n\n      return `${cssText}\\n`;\n    },\n    result(result: LintResult, filename: string) {\n      const error = errors[filename];\n      const replacements = cache[filename];\n      const sourceMap = offsets[filename];\n\n      if (sourceMap) {\n        // eslint-disable-next-line no-param-reassign\n        result.warnings = result.warnings.map((warning) => {\n          const offset = sourceMap.find(\n            (o) => o.generated.line <= warning.line\n          );\n          if (offset) {\n            // eslint-disable-next-line no-param-reassign\n            warning.line += offset.original.line - offset.generated.line;\n          }\n\n          return warning;\n        });\n      }\n\n      if (error) {\n        // Babel adds this to the error message\n        const prefix = `${filename}: `;\n\n        let message = stripAnsi(\n          error.message.startsWith(prefix)\n            ? error.message.replace(prefix, '')\n            : error.message\n        );\n\n        let { loc } = error;\n\n        if (!loc) {\n          // If the error doesn't have location info, try to find it from the code frame\n          const line = message.split('\\n').find((l) => l.startsWith('>'));\n          const column = message.split('\\n').find((l) => l.includes('^'));\n\n          if (line && column) {\n            loc = {\n              line: Number(line.replace(/^> /, '').split('|')[0].trim()),\n              column: column.replace(/[^|]+\\|\\s/, '').length,\n            };\n          }\n        }\n\n        if (loc) {\n          // Strip the codeframe text if we have location of the error\n          // It's formatted badly by stylelint, so not very helpful\n          message = message.replace(/^>?\\s+\\d?\\s\\|.*$/gm, '').trim();\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        result.errored = true;\n        result.warnings.push({\n          rule: error.code || error.name,\n          text: message,\n          line: loc ? loc.line : 0,\n          column: loc ? loc.column : 0,\n          severity: 'error',\n        });\n      }\n\n      if (replacements) {\n        replacements.forEach(({ original, length }) => {\n          // If the warnings contain stuff that's been replaced,\n          // Correct the line and column numbers to what's replaced\n          result.warnings.forEach((w) => {\n            /* eslint-disable no-param-reassign */\n            if (w.line === original.start.line) {\n              // If the error is on the same line where an interpolation started, we need to adjust the line and column numbers\n              // Because a replacement would have increased or decreased the column numbers\n              // If it's in the same line where interpolation ended, it would have been adjusted during replacement\n              if (w.column > original.start.column + length) {\n                // The error is from an item after the replacements\n                // So we need to adjust the column\n                w.column +=\n                  original.end.column - original.start.column + 1 - length;\n              } else if (\n                w.column >= original.start.column &&\n                w.column < original.start.column + length\n              ) {\n                // The linter will underline the whole word in the editor if column is in inside a word\n                // Set the column to the end, so it will underline the word inside the interpolation\n                // e.g. in `${colors.primary}`, `primary` will be underlined\n                w.column =\n                  original.start.line === original.end.line\n                    ? original.end.column - 1\n                    : original.start.column;\n              }\n            }\n          });\n        });\n      }\n\n      return result;\n    },\n  };\n}\n\nexport default preprocessor;\n"],"mappings":"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"}