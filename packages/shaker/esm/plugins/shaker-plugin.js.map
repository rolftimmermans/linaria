{"version":3,"file":"shaker-plugin.js","names":["createCustomDebug","applyAction","collectExportsAndImports","dereference","findActionForNode","getFileIdx","isRemoved","reference","removeWithRelated","sideEffectImport","shouldKeepSideEffect","hasShakerMetadata","metadata","undefined","getBindingForExport","exportPath","isIdentifier","scope","getBinding","node","name","variableDeclarator","findParent","p","isVariableDeclarator","id","get","isAssignmentExpression","left","withoutRemoved","items","filter","local","rearrangeExports","types","t","root","exportRefs","exports","rearranged","rootScope","forEach","refs","length","uid","generateUid","declaration","unshiftContainer","variableDeclaration","identifier","registerDeclaration","ref","replaced","replaceWith","isBindingIdentifier","registerConstantViolation","pushed","pushContainer","expressionStatement","assignmentExpression","memberExpression","map","exp","exported","shakerPlugin","babel","keepSideEffects","ifUnknownExport","onlyExports","pre","file","filename","opts","log","join","collected","path","sideEffectImports","imports","reexports","find","i","remove","includes","isEsModule","aliveExports","Set","importNames","imported","add","some","liveExp","isAllExportsFound","size","Error","forDeleting","has","source","push","deleted","dereferenced","changed","binding","action","parent","outerReferences","referencePaths","isAncestor","visitor","post","Map","set","__linariaShaker"],"sources":["../../src/plugins/shaker-plugin.ts"],"sourcesContent":["import type core from '@babel/core';\nimport type { BabelFile, PluginObj, NodePath } from '@babel/core';\nimport type { Binding } from '@babel/traverse';\nimport type {\n  Identifier,\n  MemberExpression,\n  Program,\n  VariableDeclarator,\n} from '@babel/types';\n\nimport { createCustomDebug } from '@linaria/logger';\nimport type { IExport, IReexport, IState } from '@linaria/utils';\nimport {\n  applyAction,\n  collectExportsAndImports,\n  dereference,\n  findActionForNode,\n  getFileIdx,\n  isRemoved,\n  reference,\n  removeWithRelated,\n  sideEffectImport,\n} from '@linaria/utils';\n\nimport shouldKeepSideEffect from './utils/shouldKeepSideEffect';\n\ntype Core = typeof core;\n\nexport interface IShakerOptions {\n  keepSideEffects?: boolean;\n  ifUnknownExport?: 'error' | 'ignore' | 'reexport-all' | 'skip-shaking';\n  onlyExports: string[];\n}\n\nexport interface IShakerMetadata {\n  imports: Map<string, string[]>;\n}\n\nexport interface IMetadata {\n  __linariaShaker: IShakerMetadata;\n}\n\ninterface NodeWithName {\n  name: string;\n}\n\nexport const hasShakerMetadata = (\n  metadata: object | undefined\n): metadata is IMetadata =>\n  metadata !== undefined && '__linariaShaker' in metadata;\n\nfunction getBindingForExport(exportPath: NodePath): Binding | undefined {\n  if (exportPath.isIdentifier()) {\n    return exportPath.scope.getBinding(exportPath.node.name);\n  }\n\n  const variableDeclarator = exportPath.findParent((p) =>\n    p.isVariableDeclarator()\n  ) as NodePath<VariableDeclarator> | undefined;\n  if (variableDeclarator) {\n    const id = variableDeclarator.get('id');\n    if (id.isIdentifier()) {\n      return variableDeclarator.scope.getBinding(id.node.name);\n    }\n  }\n\n  if (exportPath.isAssignmentExpression()) {\n    const left = exportPath.get('left');\n    if (left.isIdentifier()) {\n      return exportPath.scope.getBinding(left.node.name);\n    }\n  }\n\n  return undefined;\n}\n\nconst withoutRemoved = <T extends { local: NodePath }>(items: T[]): T[] =>\n  items.filter(({ local }) => !isRemoved(local));\n\nfunction rearrangeExports(\n  { types: t }: Core,\n  root: NodePath<Program>,\n  exportRefs: Map<string, NodePath<MemberExpression>[]>,\n  exports: IExport[]\n): IExport[] {\n  let rearranged = [...exports];\n  const rootScope = root.scope;\n  exportRefs.forEach((refs, name) => {\n    if (refs.length <= 1) {\n      return;\n    }\n\n    const uid = rootScope.generateUid(name);\n    // Define variable in the beginning\n    const [declaration] = root.unshiftContainer('body', [\n      t.variableDeclaration('var', [t.variableDeclarator(t.identifier(uid))]),\n    ]);\n\n    rootScope.registerDeclaration(declaration);\n\n    // Replace every reference with defined variable\n    refs.forEach((ref) => {\n      const [replaced] = ref.replaceWith(t.identifier(uid));\n      if (replaced.isBindingIdentifier()) {\n        rootScope.registerConstantViolation(replaced);\n      } else {\n        reference(replaced);\n      }\n    });\n\n    // Assign defined variable to the export\n    const [pushed] = root.pushContainer('body', [\n      t.expressionStatement(\n        t.assignmentExpression(\n          '=',\n          t.memberExpression(t.identifier('exports'), t.identifier(name)),\n          t.identifier(uid)\n        )\n      ),\n    ]);\n\n    const local = pushed.get('expression.right') as NodePath<Identifier>;\n    reference(local);\n\n    rearranged = rearranged.map((exp) =>\n      exp.exported === name\n        ? {\n            ...exp,\n            local,\n          }\n        : exp\n    );\n  });\n\n  return rearranged;\n}\n\nexport default function shakerPlugin(\n  babel: Core,\n  {\n    keepSideEffects = false,\n    ifUnknownExport = 'skip-shaking',\n    onlyExports,\n  }: IShakerOptions\n): PluginObj<IState & { filename: string }> {\n  return {\n    name: '@linaria/shaker',\n    pre(file: BabelFile) {\n      this.filename = file.opts.filename!;\n      const log = createCustomDebug('shaker', getFileIdx(this.filename));\n\n      log('start', `${this.filename}, onlyExports: ${onlyExports.join(',')}`);\n\n      const collected = collectExportsAndImports(file.path);\n      const sideEffectImports = collected.imports.filter(sideEffectImport);\n      log(\n        'import-and-exports',\n        [\n          `imports: ${collected.imports.length} (side-effects: ${sideEffectImports.length})`,\n          `exports: ${collected.exports.length}`,\n          `reexports: ${collected.reexports.length}`,\n        ].join(', ')\n      );\n\n      // We cannot just throw out exports if they are referred in the code\n      // Let's dome some replacements\n      const exports = rearrangeExports(\n        babel,\n        file.path,\n        collected.exportRefs,\n        collected.exports\n      );\n\n      collected.exports.forEach(({ local }) => {\n        if (local.isAssignmentExpression()) {\n          const left = local.get('left');\n          if (left.isIdentifier()) {\n            // For some reason babel does not mark id in AssignmentExpression as a reference\n            // So we need to do it manually\n            reference(left, left, true);\n          }\n        }\n      });\n\n      if (\n        onlyExports.length === 1 &&\n        onlyExports[0] === '__linariaPreval' &&\n        !exports.find((i) => i.exported === '__linariaPreval')\n      ) {\n        // Fast-lane: if only __linariaPreval is requested, and it's not exported,\n        // we can just shake out the whole file\n        this.imports = [];\n        this.exports = [];\n        this.reexports = [];\n\n        file.path.get('body').forEach((p) => {\n          p.remove();\n        });\n\n        return;\n      }\n      // Hackaround for packages which include a 'default' export without specifying __esModule; such packages cannot be\n      // shaken as they will break interopRequireDefault babel helper\n      // See example in shaker-plugin.test.ts\n      // Real-world example was found in preact/compat npm package\n      if (\n        onlyExports.includes('default') &&\n        exports.find(({ exported }) => exported === 'default') &&\n        !collected.isEsModule\n      ) {\n        this.imports = collected.imports;\n        this.exports = exports;\n        this.reexports = collected.reexports;\n        return;\n      }\n      if (!onlyExports.includes('*')) {\n        const aliveExports = new Set<IExport | IReexport>();\n        const importNames = collected.imports.map(({ imported }) => imported);\n\n        exports.forEach((exp) => {\n          if (onlyExports.includes(exp.exported)) {\n            aliveExports.add(exp);\n          } else if (\n            importNames.includes((exp.local.node as NodeWithName).name || '')\n          ) {\n            aliveExports.add(exp);\n          } else if (\n            [...aliveExports].some((liveExp) => liveExp.local === exp.local)\n          ) {\n            // It's possible to export multiple values from a single variable initializer, e.g\n            // export const { foo, bar } = baz();\n            // We need to treat all of them as used if any of them are used, since otherwise\n            // we'll attempt to delete the baz() call\n            aliveExports.add(exp);\n          }\n        });\n\n        collected.reexports.forEach((exp) => {\n          if (onlyExports.includes(exp.exported)) {\n            aliveExports.add(exp);\n          }\n        });\n\n        const isAllExportsFound = aliveExports.size === onlyExports.length;\n        if (!isAllExportsFound && ifUnknownExport !== 'ignore') {\n          if (ifUnknownExport === 'error') {\n            throw new Error(\n              `Unknown export(s) requested: ${onlyExports.join(',')}`\n            );\n          }\n\n          if (ifUnknownExport === 'reexport-all') {\n            // If there are unknown exports, we have keep alive all re-exports.\n            exports.forEach((exp) => {\n              if (exp.exported === '*') {\n                aliveExports.add(exp);\n              }\n            });\n\n            collected.reexports.forEach((exp) => {\n              if (exp.exported === '*') {\n                aliveExports.add(exp);\n              }\n            });\n          }\n\n          if (ifUnknownExport === 'skip-shaking') {\n            this.imports = collected.imports;\n            this.exports = exports;\n            this.reexports = collected.reexports;\n\n            return;\n          }\n        }\n\n        const forDeleting = [...exports, ...collected.reexports]\n          .filter((exp) => !aliveExports.has(exp))\n          .map((exp) => exp.local);\n\n        if (!keepSideEffects && sideEffectImports.length > 0) {\n          // Remove all imports that don't import something explicitly and should not be kept\n          sideEffectImports.forEach((i) => {\n            if (!shouldKeepSideEffect(i.source)) {\n              forDeleting.push(i.local);\n            }\n          });\n        }\n\n        const deleted = new Set<NodePath>();\n\n        const dereferenced: NodePath<Identifier>[] = [];\n        let changed = true;\n        while (changed && deleted.size < forDeleting.length) {\n          changed = false;\n          // eslint-disable-next-line no-restricted-syntax\n          for (const path of forDeleting) {\n            const binding = getBindingForExport(path);\n            const action = findActionForNode(path);\n            const parent = action?.[1];\n            const outerReferences = (binding?.referencePaths || []).filter(\n              (ref) => ref !== parent && !parent?.isAncestor(ref)\n            );\n            if (outerReferences.length > 0 && path.isIdentifier()) {\n              // Temporary deref it in order to simplify further checks.\n              dereference(path);\n              dereferenced.push(path);\n            }\n\n            if (\n              !deleted.has(path) &&\n              (!binding || outerReferences.length === 0)\n            ) {\n              if (action) {\n                applyAction(action);\n              } else {\n                removeWithRelated([path]);\n              }\n\n              deleted.add(path);\n              changed = true;\n            }\n          }\n        }\n\n        dereferenced.forEach((path) => {\n          // If path is still alive, we need to reference it back\n          if (!isRemoved(path)) {\n            reference(path);\n          }\n        });\n      }\n\n      this.imports = withoutRemoved(collected.imports);\n      this.exports = withoutRemoved(exports);\n      this.reexports = withoutRemoved(collected.reexports);\n    },\n    visitor: {},\n    post(file: BabelFile) {\n      const log = createCustomDebug('shaker', getFileIdx(file.opts.filename!));\n\n      const imports = new Map<string, string[]>();\n      this.imports.forEach(({ imported, source }) => {\n        if (!imports.has(source)) {\n          imports.set(source, []);\n        }\n\n        if (imported) {\n          imports.get(source)!.push(imported);\n        }\n      });\n\n      this.reexports.forEach(({ imported, source }) => {\n        if (!imports.has(source)) {\n          imports.set(source, []);\n        }\n\n        imports.get(source)!.push(imported);\n      });\n\n      log('end', `remaining imports: %O`, imports);\n\n      // eslint-disable-next-line no-param-reassign\n      (file.metadata as IMetadata).__linariaShaker = {\n        imports,\n      };\n    },\n  };\n}\n"],"mappings":"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"}