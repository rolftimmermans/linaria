{"version":3,"file":"shaker-plugin.js","names":["hasShakerMetadata","metadata","undefined","getBindingForExport","exportPath","isIdentifier","scope","getBinding","node","name","variableDeclarator","findParent","p","isVariableDeclarator","id","get","isAssignmentExpression","left","withoutRemoved","items","filter","local","isRemoved","rearrangeExports","types","t","root","exportRefs","exports","rearranged","rootScope","forEach","refs","length","uid","generateUid","declaration","unshiftContainer","variableDeclaration","identifier","registerDeclaration","ref","replaced","replaceWith","isBindingIdentifier","registerConstantViolation","reference","pushed","pushContainer","expressionStatement","assignmentExpression","memberExpression","map","exp","exported","shakerPlugin","babel","keepSideEffects","ifUnknownExport","onlyExports","pre","file","filename","opts","log","createCustomDebug","getFileIdx","join","collected","collectExportsAndImports","path","sideEffectImports","imports","sideEffectImport","reexports","find","i","remove","includes","isEsModule","aliveExports","Set","importNames","imported","add","some","liveExp","isAllExportsFound","size","Error","forDeleting","has","shouldKeepSideEffect","source","push","deleted","dereferenced","changed","binding","action","findActionForNode","parent","outerReferences","referencePaths","isAncestor","dereference","applyAction","removeWithRelated","visitor","post","Map","set","__linariaShaker"],"sources":["../../src/plugins/shaker-plugin.ts"],"sourcesContent":["import type core from '@babel/core';\nimport type { BabelFile, PluginObj, NodePath } from '@babel/core';\nimport type { Binding } from '@babel/traverse';\nimport type {\n  Identifier,\n  MemberExpression,\n  Program,\n  VariableDeclarator,\n} from '@babel/types';\n\nimport { createCustomDebug } from '@linaria/logger';\nimport type { IExport, IReexport, IState } from '@linaria/utils';\nimport {\n  applyAction,\n  collectExportsAndImports,\n  dereference,\n  findActionForNode,\n  getFileIdx,\n  isRemoved,\n  reference,\n  removeWithRelated,\n  sideEffectImport,\n} from '@linaria/utils';\n\nimport shouldKeepSideEffect from './utils/shouldKeepSideEffect';\n\ntype Core = typeof core;\n\nexport interface IShakerOptions {\n  keepSideEffects?: boolean;\n  ifUnknownExport?: 'error' | 'ignore' | 'reexport-all' | 'skip-shaking';\n  onlyExports: string[];\n}\n\nexport interface IShakerMetadata {\n  imports: Map<string, string[]>;\n}\n\nexport interface IMetadata {\n  __linariaShaker: IShakerMetadata;\n}\n\ninterface NodeWithName {\n  name: string;\n}\n\nexport const hasShakerMetadata = (\n  metadata: object | undefined\n): metadata is IMetadata =>\n  metadata !== undefined && '__linariaShaker' in metadata;\n\nfunction getBindingForExport(exportPath: NodePath): Binding | undefined {\n  if (exportPath.isIdentifier()) {\n    return exportPath.scope.getBinding(exportPath.node.name);\n  }\n\n  const variableDeclarator = exportPath.findParent((p) =>\n    p.isVariableDeclarator()\n  ) as NodePath<VariableDeclarator> | undefined;\n  if (variableDeclarator) {\n    const id = variableDeclarator.get('id');\n    if (id.isIdentifier()) {\n      return variableDeclarator.scope.getBinding(id.node.name);\n    }\n  }\n\n  if (exportPath.isAssignmentExpression()) {\n    const left = exportPath.get('left');\n    if (left.isIdentifier()) {\n      return exportPath.scope.getBinding(left.node.name);\n    }\n  }\n\n  return undefined;\n}\n\nconst withoutRemoved = <T extends { local: NodePath }>(items: T[]): T[] =>\n  items.filter(({ local }) => !isRemoved(local));\n\nfunction rearrangeExports(\n  { types: t }: Core,\n  root: NodePath<Program>,\n  exportRefs: Map<string, NodePath<MemberExpression>[]>,\n  exports: IExport[]\n): IExport[] {\n  let rearranged = [...exports];\n  const rootScope = root.scope;\n  exportRefs.forEach((refs, name) => {\n    if (refs.length <= 1) {\n      return;\n    }\n\n    const uid = rootScope.generateUid(name);\n    // Define variable in the beginning\n    const [declaration] = root.unshiftContainer('body', [\n      t.variableDeclaration('var', [t.variableDeclarator(t.identifier(uid))]),\n    ]);\n\n    rootScope.registerDeclaration(declaration);\n\n    // Replace every reference with defined variable\n    refs.forEach((ref) => {\n      const [replaced] = ref.replaceWith(t.identifier(uid));\n      if (replaced.isBindingIdentifier()) {\n        rootScope.registerConstantViolation(replaced);\n      } else {\n        reference(replaced);\n      }\n    });\n\n    // Assign defined variable to the export\n    const [pushed] = root.pushContainer('body', [\n      t.expressionStatement(\n        t.assignmentExpression(\n          '=',\n          t.memberExpression(t.identifier('exports'), t.identifier(name)),\n          t.identifier(uid)\n        )\n      ),\n    ]);\n\n    const local = pushed.get('expression.right') as NodePath<Identifier>;\n    reference(local);\n\n    rearranged = rearranged.map((exp) =>\n      exp.exported === name\n        ? {\n            ...exp,\n            local,\n          }\n        : exp\n    );\n  });\n\n  return rearranged;\n}\n\nexport default function shakerPlugin(\n  babel: Core,\n  {\n    keepSideEffects = false,\n    ifUnknownExport = 'skip-shaking',\n    onlyExports,\n  }: IShakerOptions\n): PluginObj<IState & { filename: string }> {\n  return {\n    name: '@linaria/shaker',\n    pre(file: BabelFile) {\n      this.filename = file.opts.filename!;\n      const log = createCustomDebug('shaker', getFileIdx(this.filename));\n\n      log('start', `${this.filename}, onlyExports: ${onlyExports.join(',')}`);\n\n      const collected = collectExportsAndImports(file.path);\n      const sideEffectImports = collected.imports.filter(sideEffectImport);\n      log(\n        'import-and-exports',\n        [\n          `imports: ${collected.imports.length} (side-effects: ${sideEffectImports.length})`,\n          `exports: ${collected.exports.length}`,\n          `reexports: ${collected.reexports.length}`,\n        ].join(', ')\n      );\n\n      // We cannot just throw out exports if they are referred in the code\n      // Let's dome some replacements\n      const exports = rearrangeExports(\n        babel,\n        file.path,\n        collected.exportRefs,\n        collected.exports\n      );\n\n      collected.exports.forEach(({ local }) => {\n        if (local.isAssignmentExpression()) {\n          const left = local.get('left');\n          if (left.isIdentifier()) {\n            // For some reason babel does not mark id in AssignmentExpression as a reference\n            // So we need to do it manually\n            reference(left, left, true);\n          }\n        }\n      });\n\n      if (\n        onlyExports.length === 1 &&\n        onlyExports[0] === '__linariaPreval' &&\n        !exports.find((i) => i.exported === '__linariaPreval')\n      ) {\n        // Fast-lane: if only __linariaPreval is requested, and it's not exported,\n        // we can just shake out the whole file\n        this.imports = [];\n        this.exports = [];\n        this.reexports = [];\n\n        file.path.get('body').forEach((p) => {\n          p.remove();\n        });\n\n        return;\n      }\n      // Hackaround for packages which include a 'default' export without specifying __esModule; such packages cannot be\n      // shaken as they will break interopRequireDefault babel helper\n      // See example in shaker-plugin.test.ts\n      // Real-world example was found in preact/compat npm package\n      if (\n        onlyExports.includes('default') &&\n        exports.find(({ exported }) => exported === 'default') &&\n        !collected.isEsModule\n      ) {\n        this.imports = collected.imports;\n        this.exports = exports;\n        this.reexports = collected.reexports;\n        return;\n      }\n      if (!onlyExports.includes('*')) {\n        const aliveExports = new Set<IExport | IReexport>();\n        const importNames = collected.imports.map(({ imported }) => imported);\n\n        exports.forEach((exp) => {\n          if (onlyExports.includes(exp.exported)) {\n            aliveExports.add(exp);\n          } else if (\n            importNames.includes((exp.local.node as NodeWithName).name || '')\n          ) {\n            aliveExports.add(exp);\n          } else if (\n            [...aliveExports].some((liveExp) => liveExp.local === exp.local)\n          ) {\n            // It's possible to export multiple values from a single variable initializer, e.g\n            // export const { foo, bar } = baz();\n            // We need to treat all of them as used if any of them are used, since otherwise\n            // we'll attempt to delete the baz() call\n            aliveExports.add(exp);\n          }\n        });\n\n        collected.reexports.forEach((exp) => {\n          if (onlyExports.includes(exp.exported)) {\n            aliveExports.add(exp);\n          }\n        });\n\n        const isAllExportsFound = aliveExports.size === onlyExports.length;\n        if (!isAllExportsFound && ifUnknownExport !== 'ignore') {\n          if (ifUnknownExport === 'error') {\n            throw new Error(\n              `Unknown export(s) requested: ${onlyExports.join(',')}`\n            );\n          }\n\n          if (ifUnknownExport === 'reexport-all') {\n            // If there are unknown exports, we have keep alive all re-exports.\n            exports.forEach((exp) => {\n              if (exp.exported === '*') {\n                aliveExports.add(exp);\n              }\n            });\n\n            collected.reexports.forEach((exp) => {\n              if (exp.exported === '*') {\n                aliveExports.add(exp);\n              }\n            });\n          }\n\n          if (ifUnknownExport === 'skip-shaking') {\n            this.imports = collected.imports;\n            this.exports = exports;\n            this.reexports = collected.reexports;\n\n            return;\n          }\n        }\n\n        const forDeleting = [...exports, ...collected.reexports]\n          .filter((exp) => !aliveExports.has(exp))\n          .map((exp) => exp.local);\n\n        if (!keepSideEffects && sideEffectImports.length > 0) {\n          // Remove all imports that don't import something explicitly and should not be kept\n          sideEffectImports.forEach((i) => {\n            if (!shouldKeepSideEffect(i.source)) {\n              forDeleting.push(i.local);\n            }\n          });\n        }\n\n        const deleted = new Set<NodePath>();\n\n        const dereferenced: NodePath<Identifier>[] = [];\n        let changed = true;\n        while (changed && deleted.size < forDeleting.length) {\n          changed = false;\n          // eslint-disable-next-line no-restricted-syntax\n          for (const path of forDeleting) {\n            const binding = getBindingForExport(path);\n            const action = findActionForNode(path);\n            const parent = action?.[1];\n            const outerReferences = (binding?.referencePaths || []).filter(\n              (ref) => ref !== parent && !parent?.isAncestor(ref)\n            );\n            if (outerReferences.length > 0 && path.isIdentifier()) {\n              // Temporary deref it in order to simplify further checks.\n              dereference(path);\n              dereferenced.push(path);\n            }\n\n            if (\n              !deleted.has(path) &&\n              (!binding || outerReferences.length === 0)\n            ) {\n              if (action) {\n                applyAction(action);\n              } else {\n                removeWithRelated([path]);\n              }\n\n              deleted.add(path);\n              changed = true;\n            }\n          }\n        }\n\n        dereferenced.forEach((path) => {\n          // If path is still alive, we need to reference it back\n          if (!isRemoved(path)) {\n            reference(path);\n          }\n        });\n      }\n\n      this.imports = withoutRemoved(collected.imports);\n      this.exports = withoutRemoved(exports);\n      this.reexports = withoutRemoved(collected.reexports);\n    },\n    visitor: {},\n    post(file: BabelFile) {\n      const log = createCustomDebug('shaker', getFileIdx(file.opts.filename!));\n\n      const imports = new Map<string, string[]>();\n      this.imports.forEach(({ imported, source }) => {\n        if (!imports.has(source)) {\n          imports.set(source, []);\n        }\n\n        if (imported) {\n          imports.get(source)!.push(imported);\n        }\n      });\n\n      this.reexports.forEach(({ imported, source }) => {\n        if (!imports.has(source)) {\n          imports.set(source, []);\n        }\n\n        imports.get(source)!.push(imported);\n      });\n\n      log('end', `remaining imports: %O`, imports);\n\n      // eslint-disable-next-line no-param-reassign\n      (file.metadata as IMetadata).__linariaShaker = {\n        imports,\n      };\n    },\n  };\n}\n"],"mappings":"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"}